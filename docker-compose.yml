
services:
  # ORS application
  ors-app:
    image: openrouteservice/openrouteservice:v8.0.0
    container_name: ors-app-Turkey
    ports:
      - "8084:8082"  # ORS port for matrix API
      - "9002:9001"  # ORS port for elevation API
    mem_limit: 4g
    volumes:
      - ./ors-docker:/home/ors
      - D:/RepZone/OpenRouteTurkey/turkey-latest.osm.pbf:/home/ors/files/turkey-latest.osm.pbf
      - graphs:/home/ors/graphs
      - elevation_cache:/home/ors/elevation_cache
      - config:/home/ors/config
      - logs:/home/ors/logs
      - files:/home/ors/files
    environment:
      REBUILD_GRAPHS: False
      CONTAINER_LOG_LEVEL: INFO
      XMS: 2g
      XMX: 6g
      ADDITIONAL_JAVA_OPTS: ""
      ors.engine.source_file: /home/ors/files/turkey-latest.osm.pbf
      ors.engine.profile_default.maximum_distance: 600000
      ors.engine.graphs_root_path: /home/ors/graphs
      ors.engine.elevation.cache_path: /home/ors/elevation_cache
      ors.engine.profiles.car.enabled: true
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8084/ors/v2/health || exit 1
      start_period: 1m
      interval: 10s
      timeout: 2s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Flask application
  flask-app:
    build:
      context: ./flask-app
    container_name: flask-app-Turkey
    ports:
      - "5000:5000"
    volumes:
      - ./flask-app:/app  # Mount your flask-app directory here
    depends_on:
      - ors-app
    environment:
      - ORS_API_URL=http://ors-app:8082/ors/v2/matrix/driving-car  # Connects to the ORS container
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
    command: >
      sh -c "pip install -r requirements.txt &&
             while inotifywait -e modify requirements.txt; do pip install -r requirements.txt; done &
             flask run --host=0.0.0.0 --port=5000"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Docker Volumes configuration
volumes:
  graphs:
    driver: local
  elevation_cache:
    driver: local
  config:
    driver: local
  logs:
    driver: local
  files:
    driver: local
